'use client';

import React from 'react';

interface ClusterSummaryProps {
  summary: string | null;
  isLoading: boolean;
  error: string | null;
  selectedClusterId: number | null;
}

const ClusterSummary: React.FC<ClusterSummaryProps> = ({
  summary,
  isLoading,
  error,
  selectedClusterId,
}) => {
  return (
    <div className="p-5 border border-gray-200 rounded-lg shadow-sm bg-white">
      <h3 className="text-lg font-semibold mb-3 text-primary-600 flex items-center">
        <svg className="w-5 h-5 mr-2 text-primary-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
        </svg>
        AI-Generated Cluster Insights
      </h3>

      {/* No cluster selected state */}
      {selectedClusterId === null && !isLoading && !error && (
        <div className="bg-gray-50 rounded-md p-4 text-center">
          <svg className="w-12 h-12 text-gray-400 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
          </svg>
          <p className="text-gray-600 mb-2">Select a cluster to analyze</p>
          <p className="text-sm text-gray-500">Click on a cluster in the legend to generate insights</p>
        </div>
      )}

      {/* Loading state */}
      {isLoading && (
        <div className="bg-white p-4 rounded-md">
          <div className="flex flex-col items-center justify-center space-y-3">
            <div className="animate-pulse flex space-x-4 items-center">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500"></div>
              <div className="h-4 bg-gray-200 rounded w-48"></div>
            </div>
            <div className="animate-pulse space-y-2 w-full">
              <div className="h-3 bg-gray-200 rounded w-full"></div>
              <div className="h-3 bg-gray-200 rounded w-5/6"></div>
              <div className="h-3 bg-gray-200 rounded w-4/6"></div>
            </div>
            <p className="text-sm text-gray-500">Analyzing Cluster {selectedClusterId}...</p>
          </div>
        </div>
      )}

      {/* Error state */}
      {error && !isLoading && (
        <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md">
          <div className="flex">
            <div className="flex-shrink-0">
              <svg className="h-5 w-5 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd"></path>
              </svg>
            </div>
            <div className="ml-3">
              <p className="text-sm font-medium">Error generating insights:</p>
              <p className="text-xs mt-1">{error}</p>
              <button 
                onClick={() => window.location.reload()} 
                className="mt-2 text-xs font-medium text-red-800 hover:underline"
              >
                Try again
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Summary content */}
      {!isLoading && !error && summary && (
        <div className="bg-white rounded-md">
          <div className="text-sm text-gray-600 mb-2">
            <span className="font-medium">Cluster {selectedClusterId}</span> • 
            <span className="text-gray-500 ml-1">AI analysis</span>
          </div>
          <div className="prose prose-sm max-w-none text-gray-700 bg-gray-50 p-4 rounded-md shadow-inner">
            {summary.split('\n').map((line, index) => (
              <p key={index} className={line.trim() === '' ? 'h-4' : ''}>
                {line}
              </p>
            ))}
          </div>
          <div className="mt-3 text-xs text-gray-500 italic">
            Generated by Google Gemini API • Not for clinical use
          </div>
        </div>
      )}

      {/* Empty summary state */}
      {!isLoading && !error && !summary && selectedClusterId !== null && (
        <div className="bg-yellow-50 border border-yellow-200 text-yellow-800 px-4 py-3 rounded-md">
          <div className="flex">
            <div className="flex-shrink-0">
              <svg className="h-5 w-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clipRule="evenodd"></path>
              </svg>
            </div>
            <div className="ml-3">
              <p className="text-sm font-medium">
                Summary generated, but no insights were returned
              </p>
              <p className="text-xs mt-1">
                This could happen if the cluster data is limited or the AI service encountered an issue
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ClusterSummary; 